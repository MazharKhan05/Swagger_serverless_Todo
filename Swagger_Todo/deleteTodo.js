/**
 *  This code was generated by SwaggerHub from the following API:
 * 
 *  https://app.swaggerhub.com/api/KHANMAZHAR72/todo/1.0.0
 *  
 *  The content of this file will never be modified after initial
 *  generation--adding or changing parameters will not be reflected
 *  here.  You can regenerate this with the latest definition by
 *  deleting the lambda and allowing SwaggerHub to recreate it
 **/
const { DynamoDBClient,GetItemCommand,DeleteItemCommand } = require('@aws-sdk/client-dynamodb');
const REGION = `us-east-1`; // Put your correct aws region
const ddbClient = new DynamoDBClient({ region: REGION });
exports.handler =async function(event, context, callback) {
  // header: (required)  login-token to authorize user
  // var auth-token = event.auth-token;
  // path: (required)  todo id to delete
  let isStateSet = false
  let response={
    message: '',
    statusCode: ''
  };
  const id = event.queryStringParameters.todoId;
  if(!id){
    response.message = 'Invalid input provided.';
    return response;
  }
  
  const getTodoParams = {
    TableName: 'todoOrg',
    Key: {
      todoId: {S:`${id}`},
    }
  };
  let paramsState = {
    TableName: 'todoState',
    Key: {
      stateId: {S:``}
    }
  };
  try {
    const tododata = await ddbClient.send(new GetItemCommand(getTodoParams));
    console.log(tododata);
    if(tododata.$metadata && tododata.$metadata.httpStatusCode === 200){
      isStateSet = true
      paramsState.Key.stateId.S = `${tododata.Item.stateId.S}`;
    }
    } catch (err) {
      console.error(err);
      return err;
    }
    
      
      console.log("state to be deleted", paramsState.Key.stateId.S);
      if(isStateSet){
        try {
          const stateDeldata = await ddbClient.send(new DeleteItemCommand(paramsState));
          console.log(stateDeldata);
          if(stateDeldata.$metadata && stateDeldata.$metadata.httpStatusCode === 200){
            try{
                const data = await ddbClient.send(new DeleteItemCommand(getTodoParams));
                if(data.$metadata && data.$metadata.httpStatusCode === 200){
                  response.message = 'Successfully deleted todo';
                  response.statusCode = 200;
                }
              } catch (err) {
                return err;
            }
          }
        } catch (err) {
          return err;
        }
      }
    return response
};